local Players = game.Players
local you = Players.LocalPlayer
local character = you.Character or you.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

local tp_gui = Instance.new("ScreenGui")
tp_gui.Name = "tp_gui"
tp_gui.Parent = you:WaitForChild("PlayerGui")

local tp_men = Instance.new("Frame")
tp_men.Name = "Menu_frame"
tp_men.Size = UDim2.new(0, 350, 0, 400)
tp_men.Position = UDim2.new(0.5, -175, 0.5, -200)
tp_men.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
tp_men.BorderSizePixel = 0
tp_men.Active = true
tp_men.Draggable = true
tp_men.Parent = tp_gui

local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0, 8)
uiCorner.Parent = tp_men

local gridLayout = Instance.new("UIGridLayout")
gridLayout.CellSize = UDim2.new(0, 150, 0, 40)
gridLayout.CellPadding = UDim2.new(0, 5, 0, 5)

local function textbutton(name, text, par, typee)
    local button = Instance.new(typee)
    button.Name = name
    button.Text = text
    button.Size = UDim2.new(0, 150, 0, 40)
    button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.BorderSizePixel = 0
    button.Parent = par

    local buttonCorner = uiCorner:Clone()
    buttonCorner.Parent = button

    return button
end

local topBarFrame = Instance.new("Frame")
topBarFrame.Size = UDim2.new(1, 0, 0, 50)
topBarFrame.BackgroundTransparency = 1
topBarFrame.Parent = tp_men


local toplayout = gridLayout:Clone()
toplayout.Parent = topBarFrame

local closebutton = textbutton("closebutton", "X", tp_men, "TextButton")
closebutton.Size = UDim2.new(0, 30, 0, 30)
closebutton.Position = UDim2.new(1, -35, 0, 5)
closebutton.BackgroundTransparency = 1

local cooldown = 3
local cooldownBox = textbutton("cooldownBox", "3", topBarFrame, "TextBox")
cooldownBox.Position = UDim2.new(0, 5, 0, 50)
cooldownBox.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
cooldownBox.PlaceholderText = "Enter Cooldown (e.g., 2.5)"
cooldownBox.Text = tostring(cooldown)

local cooldownCorner = uiCorner:Clone()
cooldownCorner.Parent = cooldownBox

cooldownBox.FocusLost:Connect(function()
    local num = tonumber(cooldownBox.Text)
    if num and num > 0 then
        cooldown = num
    else
        cooldownBox.Text = tostring(cooldown)
    end
end)


local loopButton = textbutton("loopButton", "Start Loop", topBarFrame, "TextButton")
loopButton.Position = UDim2.new(0, 165, 0, 50)
loopButton.BorderSizePixel = 0

local loopButtonCorner = uiCorner:Clone()
loopButtonCorner.Parent = loopButton

local normalScrollFrame = Instance.new("ScrollingFrame")
normalScrollFrame.Size = UDim2.new(1, 0, 1, -45)
normalScrollFrame.Position = UDim2.new(0, 0, 0, 45)
normalScrollFrame.CanvasSize = UDim2.new(0, 0, 2, 0)
normalScrollFrame.ScrollBarThickness = 0
normalScrollFrame.BackgroundTransparency = 1
normalScrollFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
normalScrollFrame.Visible = false
normalScrollFrame.ZIndex = 0
normalScrollFrame.Parent = tp_men

local bossScrollFrame = normalScrollFrame:Clone()
bossScrollFrame.Parent = tp_men
bossScrollFrame.Visible = false

local selectionFrame = Instance.new("Frame")
selectionFrame.Size = UDim2.new(1, 0, 1, -45)
selectionFrame.Position = UDim2.new(0, 0, 0, 45)
selectionFrame.BackgroundTransparency = 1
normalScrollFrame.ZIndex = 0
selectionFrame.Parent = tp_men

local gridLayout1 = gridLayout:Clone()
gridLayout.Parent = selectionFrame

local normalButton = textbutton("Normal", "Normal Enemies", selectionFrame, "TextButton")
local bossButton = textbutton("Boss", "Boss Enemies", selectionFrame, "TextButton")


closebutton.Text = "Back"
closebutton.Visible = true

local gridLayout2 = gridLayout:Clone()
gridLayout1.Parent = normalScrollFrame

local gridLayout3 = gridLayout:Clone()
gridLayout2.Parent = bossScrollFrame

local function showSelection()
    selectionFrame.Visible = true
    normalScrollFrame.Visible = false
    bossScrollFrame.Visible = false
    closebutton.Text = "X"
end

local function showEnemies(enemyType)
    selectionFrame.Visible = false
    closebutton.Text = "Back" 

    if enemyType == "Normal" then
        normalScrollFrame.Visible = true
        bossScrollFrame.Visible = false
    else
        normalScrollFrame.Visible = false
        bossScrollFrame.Visible = true
    end
end

normalButton.MouseButton1Click:Connect(function() showEnemies("Normal") end)
bossButton.MouseButton1Click:Connect(function() showEnemies("Boss") end)

closebutton.MouseButton1Click:Connect(function()
    if selectionFrame.Visible then
        tp_gui:Destroy()
    else
        showSelection()
    end
end)

showSelection()


local enemy_folder = workspace:FindFirstChild("Enemies")
local bosslocations = {}
local normallocations = {}

local enemy_names = {
    ["Him"] = "Eternal Halls Him",
    ["Oni"] = "Samurai Island Oni",
    ["Chaos Heart"] = "Chaos",
    ["Challenger"] = "Challenger",
    ["Elemental Slime"] = "Element Lab",
    ["King Slime"] = "Ensis Pond Boss",
    ["Queen Bee"] = "Flora Field Boss",
    ["Heart"] = "Heart Crystal",
    ["King of the Sea"] = "Heat Lovers Seaside Boss",
    ["Hellfire Bat"] = "Hell Boss",
    ["Luna"] = "Luna Boss",
    ["Shogun"] = "Samurai Island Boss",
    ["Demon Wolf"] = "Samurai Temple",
    ["King Skeleton"] = "Skeleton King",
    ["Mother Pig"] = "Sky 3 Miniboss",
    ["JOHN"] = "Sky 4 Boss Room",
    ["King Snowman"] = "Snowy Caps Boss",
    ["Talented Student"] = "Talented Student Boss",
    ["True Heart"] = "True Heart Crystal",
    ["Virus"] = "Virus Boss",
    ["Void Eye"] = "Void Boss"
}

for key, name in pairs(enemy_names) do
    local enemy = enemy_folder:FindFirstChild(name)
    if enemy and enemy:FindFirstChild("Enemy") and enemy.Enemy:FindFirstChild("EnemyLocation") then
        bosslocations[key] = {enemy.Enemy.EnemyLocation.CFrame}
    end
end

local crystal_folder = enemy_folder:FindFirstChild("Crystal Mobs")
if crystal_folder then
    for _, enemy in pairs(crystal_folder:GetChildren()) do
        if enemy:IsA("Model") and enemy:FindFirstChild("EnemyLocation") then
            local nameValue = enemy:FindFirstChildWhichIsA("ObjectValue")
            if nameValue and nameValue.Value and nameValue.Value:IsA("Instance") then
                local enemyName = nameValue.Value.Name
                bosslocations[enemyName] = enemy.EnemyLocation.CFrame
            end
        end
    end
end

local enemyfolders = {
["1"] = "Primis Field 1",
["2"] = "Thyrsus Woods",
["3"] = "Sonus Cave",
["4"] = "Highland",
["5"] = "Primis Field 2",
["6"] = "Ensis Pond",
["7"] = "Flora Field",
["8"] = "Abysse of Enis",
["9"] = "Highland 2",
["10"] = "Snowy Caps",
["11"] = "Hell",
["12"] = "Heat Lovers Seaside 2",
["13"] = "Heat Lovers Seaside 1",
["14"] = "Large Cave",
["15"] = "Evergreen",
["16"] = "Void",
["17"] = "Endless Woods",
["18"] = "Sky 1",
["19"] = "Sky 2",
["20"] = "Sky 3",
["21"] = "Samurai Island 2",
["22"] = "Samurai Island 3_Special",
["23"] = "Samurai Island 1",
}

for _, enemyfolder in pairs(enemyfolders) do
    local enemfolder = enemy_folder:FindFirstChild(enemyfolder)
    if enemfolder then
        for _, enemy in pairs(enemfolder:GetChildren()) do
            if enemy:IsA("Model") and enemy.Name == "Enemy" then
                local enemyModel = enemy:FindFirstChild("Model")
                local enemyLocation = enemy:FindFirstChild("EnemyLocation")

                if enemyModel and enemyLocation then
                    local enemyName = enemyModel.Value.Name 

                    if not normallocations[enemyName] then
                        normallocations[enemyName] = {}
                    end

                    table.insert(normallocations[enemyName], enemyLocation.CFrame)
                end
            end
        end
    end
end


local activeLocations = {}

local function toggleLocation(name, button, locationTable)
    if activeLocations[name] then
        activeLocations[name] = nil
        button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    else
        local loc = locationTable[name]
        if loc and #loc > 0 then
            activeLocations[name] = {locations = loc, index = 1}
            button.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        end
    end
end

loopButton.MouseButton1Click:Connect(function()
    loopEnabled = not loopEnabled
    loopButton.Text = loopEnabled and "Stop Loop" or "Start Loop"

    if loopEnabled then
        while loopEnabled do
            local activeKeys = {}

            for name in pairs(activeLocations) do
                table.insert(activeKeys, name)
            end

            if #activeKeys == 0 then
                loopEnabled = false
                loopButton.Text = "Start Loop"
                return
            end

            for _, name in ipairs(activeKeys) do
                local data = activeLocations[name]
                local locations = data.locations
                local index = data.index

                if locations and #locations > 0 then
                    humanoidRootPart.CFrame = locations[index]

                    data.index = (index % #locations) + 1
                end

                wait(cooldown)
                if not loopEnabled then return end
            end
        end
    end
end)

local sortedbossNames = {}
for name in pairs(bosslocations) do
    table.insert(sortedbossNames, name)
end
table.sort(sortedbossNames)

local sortednormalNames = {}
for name in pairs(normallocations) do
    table.insert(sortednormalNames, name)
end
table.sort(sortednormalNames)

local function teleportToNearestLocation(locations)
    if not locations or #locations == 0 then return end

    local closest = locations[1]
    local minDistance = (humanoidRootPart.Position - closest.Position).Magnitude

    for _, loc in ipairs(locations) do
        local distance = (humanoidRootPart.Position - loc.Position).Magnitude
        if distance < minDistance then
            closest = loc
            minDistance = distance
        end
    end

    humanoidRootPart.CFrame = closest
end

for _, name in ipairs(sortednormalNames) do
    local locationButton = textbutton(name, name, normalScrollFrame, "TextButton")

    locationButton.MouseButton1Click:Connect(function()
        toggleLocation(name, locationButton, normallocations)
    end)

    locationButton.MouseButton2Click:Connect(function()
        teleportToNearestLocation(normallocations[name])
    end)
end

for _, name in ipairs(sortedbossNames) do
    local locationButton = textbutton(name, name, bossScrollFrame, "TextButton")

    locationButton.MouseButton1Click:Connect(function()
        toggleLocation(name, locationButton, bosslocations)
    end)

    locationButton.MouseButton2Click:Connect(function()
        teleportToNearestLocation(bosslocations[name])
    end)
end
